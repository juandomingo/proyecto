{% extends "base.html.twig" %}
{% block title %}ABM Donantes{% endblock %}
{% block head %}
<script src="https://maps.googleapis.com/maps/api/js"></script>
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>





{% endblock %}
{% block loginfo %}{{parent()}}{% endblock %}
{% block content %}


<div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>

<div id="googleMap" style="width:500px; height:380px;"></div>
<div id="directions_panel" style="margin:20px;background-color:#FFEE77;"></div>
<p id='result' class='result'> </p>
{% if pedido|length > 0 %}
<table class="tables">

  <tr>
    <th>Número</th>
    <th>Entidad Receptora</th> 
    <th>Fecha de Ingreso</th>
    <th>Estado de Pedido</th> 
    <th>Dia y hora</th> 
    <th>Envío</th>
    <th>Acciones</th>
  </tr>
  {% for item in pedido %}
    <tr>
      <td>{{ item.numero }}</td>
      <td>{{ item.getEntidadReceptora.razon_social }}</td>
      <td>{{ item.fecha_ingreso }}</td>
      <td>{{ item.getEstado }}</td>
      <td>{{ item.getTurnoEntrega.fecha }} {{ item.getTurnoEntrega.hora }}</td>
      <td>{{ item.getEnvio }}</td>
    </tr>
  {% endfor %}
</table>

{% else %}
 <p class='importante'> No hay pedido para este día </p>
{% endif %}

{% if directas|length > 0 %}
<table class="tables">
  <tr>
    <th>Entidad Receptora</th> 
    <th>Fecha de Ingreso</th>
  </tr>
  {% for item in directas %}
    <tr>
      <td>{{ item.getEntidadReceptora.razon_social }}</td>
      <td>{{ item.fecha}}</td>
    </tr>
  {% endfor %}


{% else %}
 <p class='importante'> No hay envios directos para este día </p>
{% endif %}
















<script>
$(document).ready(function() {

Array.prototype.inArray = function(element) { 
    for(var i=0; i < this.length; i++) { 
        if(element.location.B == this[i].location.B) return true; 
    }
    return false; 
}; 

// adds an element to the array if it does not already exist using a comparer 
// function
Array.prototype.pushIfNotExist = function(element) { 
    if (!this.inArray(element)) {
        this.push(element);
    }
}; 



var jsonurl = "http://api.openweathermap.org/data/2.5/forecast?lat=-34.89268966339911&lon=-57.9803466796875";
  var ny = [];
  var horas = [];
  var temperatura = [];
  var clima = [];

  $.get( jsonurl, function( data ) {
  $( "#result" ).html( data.cod );
  arr = data.list;
     ny = [-0.2, 0.8, 5.7, 11.3, 17.0, 22.0, 24.8, 24.1, 20.1, 14.1, 8.6, 2.5];
  var arrayLength = arr.length;
  for (var i = 0; i < arrayLength; i++) {
      if (arr[i].dt_txt.split(' ')[0] == '{{fecha}}' )
        {horas.push(arr[i].dt_txt.split(' ')[1]);
          temperatura.push(arr[i].main.temp-273 | 1);
          clima.push(arr[i].weather[0].id);
        }
  }
  });
});

var waypts = [];
var directionsDisplay;
var directionsService = new google.maps.DirectionsService();
var map;
var Centro;

function initialize() {
  directionsDisplay = new google.maps.DirectionsRenderer();
  Centro=new google.maps.LatLng(-34.9211, -57.9544);
  var mapProp = {
    center:Centro, zoom:13,
    mapTypeId:google.maps.MapTypeId.ROADMAP
  };
  map=new google.maps.Map(document.getElementById("googleMap"),mapProp);
  directionsDisplay.setMap(map);

  var CentroMarker=new google.maps.Marker({
    position:Centro,
  });
  CentroMarker.setMap(map);

  {% for item in pedido %} 
    var a{{item.getEntidadReceptora.id}}Center=new google.maps.LatLng({{item.getEntidadReceptora.getLatitud}}, {{item.getEntidadReceptora.getLongitud}});
    var a{{item.getEntidadReceptora.id}}marker=new google.maps.Marker({
      position:a{{item.getEntidadReceptora.id}}Center,
      });
    a{{item.getEntidadReceptora.id}}marker.setMap(map);
    if (waypts.filter(function(e) { return e.location == a{{item.getEntidadReceptora.id}}Center; }).length == 0) {
      waypts.pushIfNotExist({
      location:a{{item.getEntidadReceptora.id}}Center,
      stopover:true
    }); 
  {% endfor %}

  {% for item in directas %}
    var a{{item.getEntidadReceptora.id}}Center=new google.maps.LatLng({{item.getEntidadReceptora.getLatitud}}, {{item.getEntidadReceptora.getLongitud}});
    var a{{item.getEntidadReceptora.id}}marker=new google.maps.Marker({
      position:a{{item.getEntidadReceptora.id}}Center,
    });
    a{{item.getEntidadReceptora.id}}marker.setMap(map);
    
    if (waypts.filter(function(e) { return e.location == a{{item.getEntidadReceptora.id}}Center; }).length == 0) {
      waypts.pushIfNotExist({
      location:a{{item.getEntidadReceptora.id}}Center,
      stopover:true
    });
}
   
  {% endfor %}
} {# fin initialize, anda bien hasta acá #}

function calcRoute() {
  var request =
  {
    origin: Centro,
    destination: Centro,
    travelMode: google.maps.TravelMode.DRIVING,
    unitSystem: google.maps.UnitSystem.METRIC,
    waypoints: waypts,
    optimizeWaypoints: true
  };

  directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
    }
          var route = response.routes[0];
      var summaryPanel = document.getElementById('directions_panel');
      summaryPanel.innerHTML = '';
      // For each route, display summary information.
      for (var i = 0; i < route.legs.length; i++) {
        var routeSegment = i + 1;
        summaryPanel.innerHTML += '<b>Segmento de ruta: ' + routeSegment + '</b><br>';
        summaryPanel.innerHTML += route.legs[i].start_address + ' hasta ';
        summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
        summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
      }

  });
} {# fin calc route #}



new Morris.Line({
  // ID of the element in which to draw the chart.
  element: 'container',
  // Chart data records -- each entry in this array corresponds to a point on
  // the chart.
  data: [
    { year: '2008', value: 20 },
    { year: '2009', value: 10 },
    { year: '2010', value: 5 },
    { year: '2011', value: 5 },
    { year: '2012', value: 20 }
  ],
  // The name of the data record attribute that contains x-values.
  xkey: 'year',
  // A list of names of data record attributes that contain y-values.
  ykeys: ['value'],
  // Labels for the ykeys -- will be displayed when you hover over the
  // chart.
  labels: ['Value']
});








google.maps.event.addDomListener(window, 'load', initialize);

window.onload = function() {
  calcRoute();
};

</script>





{% endblock %}

{% block footer %}{{ parent() }}{% endblock %}
